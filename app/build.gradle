apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'android-aspectjx'
//apply plugin: 'com.hujiang.android-aspectjx'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.example.optimize"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //配置keystore签名
    signingConfigs {
        release {
            storeFile file("./hyc.keystore")
            storePassword "hycdemo"
            keyAlias "hyc"
            keyPassword "hycdemo"
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true //资源压缩
            zipAlignEnabled true//Zipalign优化
            buildConfigField "String", "RSA_PUBLIC_KEY", "\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCq9U4ERntrIMhPdo9Al9yKyBlbG5TVRiJYXaLE37lmG0p7jDJZKwpU/shLSENV8aerdG0MIEBeLp7NaF7VfJ9wJvzuOKTryfV04Ufla7BiHp/zaeGBVdwCm2OBcWjtCsjUUmBViK+qAPMSSrZs3wG9omHKPt7mQckVAsP1B6/P6QIDAQAB\""

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "RSA_PUBLIC_KEY", "\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCq9U4ERntrIMhPdo9Al9yKyBlbG5TVRiJYXaLE37lmG0p7jDJZKwpU/shLSENV8aerdG0MIEBeLp7NaF7VfJ9wJvzuOKTryfV04Ufla7BiHp/zaeGBVdwCm2OBcWjtCsjUUmBViK+qAPMSSrZs3wG9omHKPt7mQckVAsP1B6/P6QIDAQAB\""

            minifyEnabled false
            shrinkResources false //资源压缩
            zipAlignEnabled false//Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {
        normal{
            buildConfigField "String", "test_channel", "\"1212\""
        }
        baidu{
            buildConfigField "String", "test_channel", "\"badiu\""
        }
        huawei{
            buildConfigField "String", "test_channel", "huawei"
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding "UTF-8"
    }

//    aspectjx {
//        exclude "module-info",'com.google',
//                'com.squareup',
//                'com.alipay',
//                'com.taobao',
//                'org.apache',
//                'com.noahwm.crm'
////                'com.example.optimize'
//    }

    packagingOptions{
        exclude 'META-INF/com.android.tools/proguard/coroutines.pro'
    }

    configurations.all {resolutionStrategy { force 'androidx.core:core-ktx:1.1.0' }}
    //指定kotlin版本
    configurations.all {resolutionStrategy { force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" }}
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    implementation 'org.aspectj:aspectjrt:1.8.9'
    implementation 'com.squareup.okhttp3:okhttp:3.14.3'

    implementation project(':module_base')
    implementation project(':annotation')
    implementation project(':inject')
    implementation project(':module_file')
    implementation project(':modulea')
    implementation project(':moduleb')
//    implementation project(':module_mavendemo')
    implementation project(':module_floatwindow')

    implementation project(':processor')
    annotationProcessor project(':processor')
}
apply plugin: 'tinypng'