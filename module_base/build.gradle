plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //指定kotlin版本
    configurations.all {resolutionStrategy { force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" }}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/lib_wwapi-2.0.12.6.aar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.preference:preference:1.1.1'
    implementation 'org.apache.commons:commons-compress:1.12'
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp_logging_interceptor"
    api 'com.orhanobut:logger:1.15'
    //状态栏适配框架 https://github.com/laobie/StatusBarUtil
    api 'com.jaeger.statusbarutil:library:1.5.1'
    // 吐司框架：https://github.com/getActivity/ToastUtils
    api 'com.github.getActivity:ToastUtils:10.5'
    api 'com.github.getActivity:XXPermissions:16.2'
    api 'com.github.bumptech.glide:glide:4.12.0'
    api 'com.google.zxing:core:3.3.2'
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'
    implementation 'com.alibaba:fastjson:1.2.49'//JSON.parse 将String解析成model，或者将model序列化成String，很强大
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation project(':module_imagepicker')
}